<?xml version='1.0' encoding='utf-8'?>
<shallow_water_options>
  <simulation_name>
    <string_value lines="1">MMS_X</string_value>
  </simulation_name>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh>
      <from_file>
        <relative_path>
          <string_value lines="1">src/MMS_X.msh</string_value>
        </relative_path>
      </from_file>
    </mesh>
  </geometry>
  <function_spaces>
    <function_space name="VelocityFunctionSpace">
      <degree>
        <integer_value rank="0">2</integer_value>
      </degree>
      <family>
        <string_value>Continuous Lagrange</string_value>
      </family>
    </function_space>
    <function_space name="FreeSurfaceFunctionSpace">
      <degree>
        <integer_value rank="0">1</integer_value>
      </degree>
      <family>
        <string_value>Continuous Lagrange</string_value>
      </family>
    </function_space>
  </function_spaces>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <real_value rank="0">0.0</real_value>
    </dump_period>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">999</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">40</real_value>
    </finish_time>
    <steady_state>
      <tolerance>
        <real_value rank="0">1.0e-6</real_value>
      </tolerance>
    </steady_state>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">9.8</real_value>
      </magnitude>
    </gravity>
  </physical_parameters>
  <system>
    <core_fields>
      <vector_field name="Velocity">
        <initial_condition>
          <constant>
            <real_value shape="2" dim1="dim" rank="1">0 0</real_value>
          </constant>
        </initial_condition>
        <boundary_condition name="All">
          <surface_ids>
            <integer_value shape="4" rank="1">3 4 5 6</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <cpp>
              <string_value lines="20" type="code" language="python">def val(t):
  return ("cos(x[0])*sin(x[1])", "sin(x[0]*x[0]) + cos(x[1])")</string_value>
            </cpp>
          </type>
        </boundary_condition>
      </vector_field>
      <scalar_field name="FreeSurfacePerturbation">
        <initial_condition>
          <constant>
            <real_value rank="0">0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_condition name="All">
          <surface_ids>
            <integer_value shape="4" rank="1">3 4 5 6</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <cpp>
              <string_value lines="20" type="code" language="python">def val(t):
  return "sin(x[0])*sin(x[1])"</string_value>
            </cpp>
          </type>
        </boundary_condition>
      </scalar_field>
      <scalar_field name="FreeSurfaceMean">
        <value>
          <constant>
            <real_value rank="0">50.0</real_value>
          </constant>
        </value>
      </scalar_field>
    </core_fields>
    <equations>
      <continuity_equation>
        <spatial_discretisation>
          <continuous_galerkin/>
        </spatial_discretisation>
        <source_term>
          <scalar_field name="Source">
            <value>
              <cpp>
                <string_value lines="20" type="code" language="python">def val(t):
  return "pow(cos(x[0]), 2)*pow(sin(x[1]), 2) + (cos(x[1]) + sin(pow(x[0], 2)))*cos(x[1])*sin(x[0]) - (sin(x[0])*sin(x[1]) + 50.0)*sin(x[0])*sin(x[1]) - (sin(x[0])*sin(x[1]) + 50.0)*sin(x[1])"</string_value>
              </cpp>
            </value>
          </scalar_field>
        </source_term>
      </continuity_equation>
      <momentum_equation>
        <spatial_discretisation>
          <continuous_galerkin/>
        </spatial_discretisation>
        <mass_term/>
        <advection_term/>
        <stress_term>
          <scalar_field name="Viscosity">
            <value>
              <constant>
                <real_value rank="0">0.7</real_value>
              </constant>
            </value>
          </scalar_field>
        </stress_term>
        <source_term>
          <vector_field name="Source">
            <value>
              <cpp>
                <string_value lines="20" type="code" language="python">def val(t):
  Sx = "-cos(x[0])*sin(x[0])*pow(sin(x[1]), 2) + (cos(x[1]) + sin(pow(x[0], 2)))*cos(x[0])*cos(x[1]) + 11.4333333333333*cos(x[0])*sin(x[1])"
  Sy = "2*x[0]*cos(pow(x[0], 2))*cos(x[0])*sin(x[1]) + 2.80*pow(x[0], 2)*sin(pow(x[0], 2)) + 10.0333333333333*cos(x[1])*sin(x[0]) - (cos(x[1]) + sin(pow(x[0], 2)))*sin(x[1]) - 1.40*cos(pow(x[0], 2)) + 0.933333333333333*cos(x[1])"
  return (Sx, Sy)</string_value>
              </cpp>
            </value>
          </vector_field>
        </source_term>
      </momentum_equation>
    </equations>
    <solver>
      <iterative_method name="gmres"/>
      <preconditioner name="fieldsplit">
        <type name="schur">
          <fact_type name="FULL"/>
        </type>
        <block_0_ksp_type>
          <iterative_method name="preonly"/>
        </block_0_ksp_type>
        <block_0_pc_type>
          <preconditioner name="lu"/>
        </block_0_pc_type>
        <block_1_ksp_type>
          <iterative_method name="preonly"/>
        </block_1_ksp_type>
        <block_1_pc_type>
          <preconditioner name="lu"/>
        </block_1_pc_type>
      </preconditioner>
      <relative_error>
        <real_value rank="0">1e-7</real_value>
      </relative_error>
    </solver>
  </system>
</shallow_water_options>
