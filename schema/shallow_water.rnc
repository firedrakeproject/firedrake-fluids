include "spud_base.rnc"

include "input.rnc"
include "boundary_conditions.rnc"
include "turbulence_parameterisation.rnc"
include "les.rnc"
include "solvers.rnc"

start =
   (
      ## The root node of the shallow water options dictionary.
      element shallow_water_options 
      {
         comment,
         ## The name of the simulation. All output files will
         ## have this prepended to their filenames, e.g.
         ## [simulation_name]_0.vtu. The use of non-standard
         ## characters should be avoided.
         element simulation_name
         {
            anystring
         },
         ## Geometry-related options.
         element geometry 
         {
            ## The dimension of the problem.
            ## <b>This can only be set once.</b>
            element dimension
            {
               element integer_value 
               {
                  attribute rank { "0" },
                  ("1"|"2"|"3")
               }
            },
            ## The underlying mesh of vertices and edges that discretises the domain.
            element mesh {
               (
                  ## Unit mesh.
                  element unit_mesh {
                     ## Number of nodes along each axis
                     element number_of_nodes {
                        integer_dim_vector
                     }
                  }|
                  ## An interval mesh, going from x = 0 to x = L (where L is the length).
                  element interval_mesh {
                     element length {
                        real
                     },
                     element number_of_cells {
                        integer
                     }
                  }|
                  ## Input mesh from a file. Only Gmsh format is currently supported.
                  element from_file 
                  {
                     ## The path to the mesh file, relative to the directory where this simulation setup file is stored.
                     element relative_path
                     {
                        anystring
                     }
                  }
               )
            }
         },
         ## The function spaces used to represent the solution fields
         ## that are solved for.
         element function_spaces 
         {
            ## The function spaces used for various fields.
            element function_space 
            {
               ## The position mesh
               attribute name { "VelocityFunctionSpace" },
               function_space_options
            },
            element function_space 
            {
               ## The position mesh
               attribute name { "FreeSurfaceFunctionSpace" },
               function_space_options
            }
         },
         ## Input/output options
         element io 
         {
            ## Format for dump files. Only vtk is currently supported.
            element dump_format 
            {
               element string_value 
               {
                  "vtk"
               }
            },
            (
               ## Period between dumps in time units.
               ##
               ## Setting this to zero will result in dumps at every time-step.
               element dump_period 
               {
                  real 
               }
            ),
            (
               element checkpoint
               {
                  ## Period between checkpoint data dumps in time units.
                  ##
                  ## Setting this to zero will result in checkpoint dumps at every time-step.
                  element dump_period 
                  {
                     real
                  }
               }
            )?
         },
         ## Options concerning the time loop.
         element timestepping 
         {
            ## The time t at the start of the simulation. This is usually set to 0.
            element current_time
            {
               real
            },
            ## The time step size.
            element timestep 
            {
               real
            },
            ## Simulation time at which the simulation should end.
            element finish_time 
            {
               real
            },
            ## Activate if you want to terminate the simulation once a steady state is reached.
            element steady_state 
            {
               element tolerance 
               {
                  real
               }
            }?
         },
         ## The physical parameters
         element physical_parameters 
         {
            element gravity 
            {
               ## Acceleration due to gravity. This is 9.8 m/s^2 on Earth.
               element magnitude 
               {
                  real
               }
            }
         },
         ## The description of the physical system, specifying the core fields and the options associated with the shallow water equations.
         element system 
         {
            element core_fields
            {
               core_fields
            },
            ## The options available for the governing equations of the shallow water model.
            element equations
            {
               equations
            },
            element solver
            {
               solvers
            }
         }
      }
   )
   
function_space_options =
(
   element degree
   {
      integer
   },
   element family 
   {
      element string_value
      {
         "Continuous Lagrange" | "Discontinuous Lagrange"
      }
   }
)
    
    
core_fields = 
(
   ## Velocity (found by solving the momentum equation).
   element vector_field 
   {
      attribute name { "Velocity" },
      element initial_condition 
      {
         input_choice_real_dim_vector
      },
      element boundary_condition 
      {
         attribute name { xsd:string },
         ## Surface IDs
         element surface_ids 
         {
            integer_vector
         },
         (
            core_vector_boundary_condition | velocity_boundary_condition
         )
      }*
   },
   ## The deviation of the free surface height from the mean.
   element scalar_field 
   {
      attribute name { "FreeSurfacePerturbation" },
      element initial_condition 
      {
         input_choice_real
      },
      element boundary_condition 
      {
         attribute name { xsd:string },
         ## Surface IDs
         element surface_ids 
         {
            integer_vector
         },
         (
            core_scalar_boundary_condition
         )
      }*
   },
   ## The mean free surface height. Also known as the depth of the
   ## fluid at rest (always positive).
   element scalar_field
   {
      attribute name { "FreeSurfaceMean" },
      element value 
      {
         input_choice_real
      }
   }
)

equations = 
(
   ## Options for the continuity equation.
   element continuity_equation
   {
      continuity_equation_options
   },
   ## Options for the momentum equation.
   element momentum_equation
   {
      momentum_equation_options
   }
)
    
continuity_equation_options =
   (
      ## Spatial discretisation options.
      element spatial_discretisation 
      {
         ## Continuous Galerkin discretisation.
         element continuous_galerkin 
         {
            empty
         }
      },      
      ## Integrate the divergence term in the continuity equation by parts.
      ## This allows the imposition of weak boundary conditions for the Velocity field.
      element integrate_by_parts {
         empty
      }?,
      ## Adds a source term to the RHS of the continuity equation.
      element source_term
      {
         element scalar_field
         {
            attribute name { "Source" },
            element value 
            {
               input_choice_real
            }
         }
      }?
   )

momentum_equation_options =
   (
      ## Spatial discretisation options.
      element spatial_discretisation 
      {
         ## Continuous Galerkin discretisation.
         element continuous_galerkin 
         {
            element stabilisation
            {
               stabilisation_options
            }?
         }|
         ## Discontinuous Galerkin discretisation.
         element discontinuous_galerkin 
         {
            empty
         }
      },
      ## Options for the mass term.
      element mass_term 
      {
         ## Remove the mass term from the equation.
         element exclude_mass_term 
         {
            empty
         }?
      },
      ## Options for the advection term.
      element advection_term 
      {
         ## Remove the mass terms from the equation.
         element exclude_advection_term 
         {
            empty
         }?,
         ## Integrate the advection term by parts.
         element integrate_by_parts
         {
            empty
         }?
      },
      ## Options for the stress term div(T) where T is the stress tensor, defined by
      ##
      ## T = nu*( (grad(u) + grad(u)^T) - (2/3)*div(u)*I )
      ##
      ## where I is the identity tensor, u is the velocity field, and nu is the kinematic, isotropic viscosity.
      element stress_term
      {
         ## Isotropic viscosity.
         ## Note that this is the kinematic viscosity for shallow water simulations.
         element scalar_field 
         {
            attribute name { "Viscosity" },
            element value 
            {
               input_choice_real
            }
         }
      }?,
      ## Options for the quadratic drag term.
      element drag_term
      {
         ## The (non-dimensional) bottom drag/friction coefficient.
         element scalar_field 
         {
            attribute name { "BottomDragCoefficient" },
            element value 
            {
               input_choice_real
            }
         },
         element turbine_drag
         {
            ## The (non-dimensional) drag coefficient which parameterises turbines.
            element scalar_field 
            {
               attribute name { "TurbineDragCoefficient" },
               element value 
               {
                  input_choice_real
               }
            },
            ## The 'radius' of the turbine(s).
            element turbine_radius
            {
               python_code
            },
            (
               ## The turbine drag function type.
               element turbine_type
               {
                  attribute name { "bump" }
               }|
               element turbine_type
               {
                  attribute name { "tophat" }
               }
            ),
            ## The coordinates of the turbine centres, as a list of tuples.
            element turbine_coordinates
            {
               python_code
            },
            ## Output a VTU showing the turbine drag field.
            element write_turbine_drag
            {
               empty
            }?
         }?

      }?,
      ## Adds a source term to the RHS of the momentum equation.
      element source_term
      {
         element vector_field
         {
            attribute name { "Source" },
            element value 
            {
               input_choice_real_dim_vector
            }
         }
      }?,      
      ## Turbulence parameterisations.
      element turbulence_parameterisation 
      {
         turbulence_parameterisation
      }?
   )

velocity_boundary_condition =
(
   ## The no_normal_flow boundary condition weakly applies the condition
   ##
   ## dot(u, n) = 0
   ##
   ## if the continuity equation is integrated by parts.
   element type 
   {
      attribute name { "no_normal_flow" }
   }|
   ## Applies a Flather boundary condition:
   ##
   ## u = u_ext + sqrt(g/H)*(h - h_ext)
   ##
   ## where H = h + h_mean, 
   ## and u_ext and h_ext are the exterior values of the Velocity and FreeSurfacePerturbation fields, respectively.
   ## Note: This is a weak boundary condition. It is only applied if the divergence term in the continuity equation is integrated by parts.
   element type 
   {
      attribute name { "flather" },
      ## The exterior value of the Velocity field
      element exterior_velocity 
      {
         input_choice_real_dim_vector
      },
      ## The exterior value of the FreeSurfacePerturbation field
      element exterior_free_surface_perturbation 
      {
         input_choice_real
      }
   }
)

stabilisation_options = 
(
   ## Add a streamline upwind stabilisation term
   ## (given by equation 2.52 in Donea & Huerta (2003))
   ## to the advection term.
   element streamline_upwind_stabilisation 
   {
      comment
   }
)
