<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
  <define name="input_choice_real">
    <choice>
      <element name="constant">
        <a:documentation>Constant value</a:documentation>
        <ref name="real"/>
      </element>
      <element name="python">
        <a:documentation>Python function prescribing real input given as a Python string. Functions should be of the form:

def val(x, t):
    # String containing the input as Python code.
    # The argument 't' is the current simulation time and may also be used in the expression,
    # along with x[0], x[1] and x[2], the x, y and z coordinates of the mesh.
    return sin(x[0]*t)</a:documentation>
        <ref name="python_code"/>
      </element>
    </choice>
  </define>
  <define name="input_choice_real_dim_vector">
    <choice>
      <element name="constant">
        <a:documentation>Constant value</a:documentation>
        <ref name="real_dim_vector"/>
      </element>
      <element name="python">
        <a:documentation>Python function prescribing real input given as a Python string. Functions should be of the form:

def val(x, t):
    # String containing the input as Python code.
    # The argument 't' is the current simulation time and may also be used in the expression,
    # along with x[0], x[1] and x[2], the x, y and z coordinates of the mesh.
    # For vectors, the function should return a list or tuple of length equal to that of the problem's dimension.
    return [sin(x[0]*t), cos(x[1]*t)]</a:documentation>
        <ref name="python_code"/>
      </element>
    </choice>
  </define>
</grammar>
